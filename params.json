{"name":"Supercron","tagline":"Intelligent interface to cron in UNIX systems","body":"# SuperCron\r\nIntelligent interface to cron in UNIX systems.\r\n\r\n## Installation\r\n\r\nRun `pip install supercron` or `easy_install supercron`.\r\n\r\n## SuperCron vs classical crontab\r\nSuperCron is based on crontab, while providing the following additional advantages:\r\n- it can run interactively or non-interactively.\r\n- it allows controlling several jobs simultaneously if they were assigned the same job name.\r\n- it provides more options to handle jobs: adding, removing, searching, enabling, disabling, etc.\r\n- it allows a vast and flexible amount of repetition sentences.\r\n- it allows trigger-induced jobs based on the states of other jobs.\r\n- it is more friendly especially to new sysadmins.\r\n\r\n## Usage\r\n\r\nSuperCron can run either in interactive mode or non-interactive mode.\r\n\r\n**Interactive mode:**\r\n\r\nRun `supercron` without any arguments to start interactive mode. You will prompted to choose an action, and then to enter action parameters (like `name`, `command` and `repetition`) if any.\r\n\r\n**Non-interactive mode:**\r\n\r\nIn non-interactive mode, one of the following options can be used after the command name `supercron`.\r\n\r\n- option `-h` or `--help`: shows the help message, with some usage examples\r\n- option `-V` or `--version`: displays the version number\r\n\r\nAdditionally, one of the following subcommands can be used: add, delete, enable, disable, search, clear, trigger.\r\n\r\n***Subcommand add***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- option `-q` or `--quiet`: optional; suppresses all output and error messages\r\n- option `-c` or `--command`: required; here goes the command to be executed\r\n- option `-r` or `--repetition`: required; the repetition sentence (see examples below)\r\n- argument `name`: required; represents the job name which will be added (several jobs can share the same name)\r\n\r\n***Subcommand rename***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- option `-q` or `--quiet`: optional; suppresses all output and error messages\r\n- argument `old_name`: required; old name of the job(s) (several jobs can share the same name)\r\n- argument `new_name`: required; new name of the job(s) (several jobs can share the same name)\r\n\r\n***Subcommands delete, enable and disable***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- option `-q` or `--quiet`: optional; suppresses all output and error messages\r\n- argument `name`: required; represents the job name on which the action will occur (several jobs can share the same name)\r\n\r\n***Subcommand search***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- argument `name`: required; the exact job name to search for, or `@supercron` to list all SuperCron jobs, or `@all` to list all user's crontab entries\r\n\r\n***Subcommand clear***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- option `-q` or `--quiet`: optional; suppresses all output and error messages\r\n- option `-f` or `--force`: skips asking for confirmation before clearing all jobs\r\n\r\nNote: this subcommand will only clear SuperCron jobs from user's crontab.\r\n\r\n***Subcommand trigger***\r\n- option `-h` or `--help`: shows the help message of the subcommand\r\n- option `-q` or `--quiet`: optional; suppresses all output and error messages\r\n- option `-t` or `--trigger`: trigger in the form of \"none\" or \"*ACTION* if *NAME* is *STATE*\". See **Triggers** section below.\r\n- argument `name`: required; represents the triggered job name on which *ACTION* will occur (several jobs can share the same name)\r\n\r\n## Examples\r\n- Add a job:\r\n```\r\nsupercron add -c \"date +%j >> log_file\" -r \"every 2 days\" log_dates\r\nsupercron add -c \"scp -r /path1 user@server:/path2\" -r \"at 11:50 pm on mondays\" backup_server\r\n```\r\n- Rename a job:\r\n```\r\nsupercron rename log_dates log_all_dates\r\n```\r\n- Delete a job:\r\n```\r\nsupercron delete log_dates\r\n```\r\n- Enable a job:\r\n```\r\nsupercron enable log_dates\r\n```\r\n- Disable a job:\r\n```\r\nsupercron disable log_dates\r\n```\r\n- Search jobs:\r\n```\r\nsupercron search log_dates\r\nsupercron search @supercron\r\nsupercron search @all\r\n```\r\n- Clear all SuperCron jobs:\r\n```\r\nsupercron clear\r\n```\r\n- Add a trigger:\r\n```\r\nsupercon trigger -t \"on if log_months is off\" log_days\r\n```\r\n- Remove a trigger:\r\n```\r\nsupercron trigger -t none log_days\r\n```\r\n\r\n## Repetition sentences\r\nRepetition sentences are provided in a `supercron add` command directly after the `-r` or `--repetition` option.\r\n\r\nExamples of accepted repetition sentences (case insensitive):\r\n- everyday\r\n- at midnight\r\n- every 5 minutes\r\n- once every 2 hours\r\n- every 10 days\r\n- every 4 months\r\n- on mondays\r\n- on monday, wednesday and friday\r\n- from saturday to tuesday\r\n- on fri\r\n- on mon, wed and fri\r\n- from mon to thu\r\n- at 11:50\r\n- at 23:50\r\n- at 10:10 am\r\n- at 10:10 pm\r\n- on 19/5\r\n- in september\r\n- in sep\r\n- from may to august\r\n- from dec to feb\r\n- in january and april\r\n- in jan, aug, oct\r\n\r\nRepetition sentences can also be any (unsorted) logical mix of the above. For example:\r\n- at 09:00 every 3 days\r\n- from june to november every 2 hours\r\n- every 30 minutes on fri and sat\r\n- midnight from monday to friday in october and december\r\n\r\n## Triggers\r\nTriggers can take one of 2 forms:\r\n- \"none\" for removing the previous trigger\r\n- \"*ACTION* if *NAME* is *STATE*\" for adding a new trigger or replacing an old one\r\n\r\n*ACTION* is the action applied on the enabled state of the triggered job and it can be `on`, `off` or `toggled`.\r\n\r\n*NAME* is the name of the triggering job.\r\n\r\n*STATE* is the triggering state of the triggering job, and it can be `enabled`, `disabled`, `toggled`, `added` or `deleted`.\r\n\r\nUsing action `toggle` means to enable the triggered job if it was disabled, and to disable it if it was enabled.\r\n\r\nState `toggled` activates the trigger when the triggering job is enabled or disabled.\r\n\r\nNote that when a job is renamed from *name1* to *name2*, it means activating triggers that end with `if name1 is deleted` and triggers that end with `if name2 is added`, since a rename is considered a deletion of the old job name and an addition of the new job name.\r\n","google":"UA-65894507-2","note":"Don't delete this file! It's used internally to help with page regeneration."}